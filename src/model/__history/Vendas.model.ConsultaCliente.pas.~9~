unit Vendas.model.ConsultaCliente;

interface

uses Vendas.Utils;
type TConsultaClientes = class
  private
  Fcodigo : integer;
  Frazao :string;
  public
  property codigo: integer  read Fcodigo write Fcodigo;
  property razao: string  read Frazao write Frazao;

  procedure ConsultaPorCodigo;
  procedure ConsultaPorRazao;
  class function New: TConsultaClientes;
end;

implementation

{ TConsultaCliente }

uses Vendas.view.page.CadastroVenda, Vendas.view.page.ConsultaCliente;


{ TConsultaCliente }


procedure TConsultaClientes.ConsultaPorCodigo;
begin
     begin
   CadastroVenda.QConsultaClienteCampos.Close;
   CadastroVenda.QConsultaClienteCampos.Sql.Clear;
   CadastroVenda.QConsultaClienteCampos.Sql.Add('Select * From clientes where razao = :PRazao');
   CadastroVenda.QConsultaClienteCampos.ParamByName('Pcodigo').AsInteger := (Fcodigo)  ;
   CadastroVenda.QConsultaClienteCampos.Open;

   if CadastroVenda.QConsultaClienteCampos.RecordCount > 1  then
    begin
    ConsultaCliente.ShowModal;
    end
    else
      try
    CadastroVenda.MVenda.FieldByName('CODCLI').AsInteger := CadastroVenda.QConsultaClienteCampos.FieldByName('CODCLI').AsInteger ;
    CadastroVenda.MVenda.FieldByName('codigo').AsInteger := CadastroVenda.QConsultaClienteCampos.FieldByName('codigo').AsInteger;
    CadastroVenda.MVenda.FieldByName('razao').AsString := CadastroVenda.QConsultaClienteCampos.FieldByName('razao').AsString;
    except
    CadastroVenda.MVenda.Cancel;
    raise;
  end;
   end;
end;

procedure TConsultaClientes.ConsultaPorRazao;
begin

end;

class function TConsultaClientes.New: TConsultaClientes;
begin
   Result := TConsultaClientes.Create;
end;

end.
